syntax = "proto3";

package api.houyi.common;

import "google/protobuf/duration.proto";
import "houyi/common/team.proto";
import "houyi/common/datasource.proto";

option go_package = "github.com/moon-monitor/moon/pkg/api/houyi/common;common";

enum StrategyType {
  metric = 0;
  event = 1;
  logs = 2;
  certificate = 3;
  port = 4;
  http = 5;
  ping = 6;
}

// 采样方式
enum SampleMode {
  // m时间内连续出现n次
  For = 0;
  // m时间内最多出现n次
  Max = 1;
  // m时间内最少出现n次
  Min = 2;
}

message MetricStrategyItem {
  // 判断条件
  enum Condition {
    // 等于
    EQ = 0;
    // 不等于
    NE = 1;
    // 大于
    GT = 2;
    // 大于等于
    GTE = 3;
    // 小于
    LT = 4;
    // 小于等于
    LTE = 5;
    // 在范围内
    In = 6;
    // 不在范围内
    NotIn = 7;
  }

  message LabelNotices {
    string key = 1;
    string value = 2;
    repeated string receiverRoutes = 3;
  }

  message MetricRuleItem {
    uint32 strategyId = 1;
    uint32 levelId = 2;
    string levelName = 3;
    SampleMode sampleMode = 4;
    int64 count = 5;
    Condition condition = 6;
    repeated double values = 7;
    repeated string receiverRoutes = 8;
    repeated LabelNotices labelNotices = 9;
    google.protobuf.Duration duration = 10;
    bool enable = 11;
  }

  message MetricDatasourceItem {
    houyi.common.MetricDatasourceDriver driver = 1;
    uint32 id = 2;
  }

  houyi.common.TeamItem team = 1;
  repeated MetricDatasourceItem datasource = 2;
  string name = 3;
  string expr = 4;
  repeated string receiverRoutes = 5;
  map<string, string> labels = 6;
  map<string, string> annotations = 7;
  uint32 strategyId = 8;
  repeated MetricRuleItem rules = 9;
}

message CertificateStrategyItem {
  // 判断条件
  enum Condition {
    // 等于
    EQ = 0;
    // 大于
    GT = 1;
    // 大于等于
    GTE = 2;
    // 小于
    LT = 3;
    // 小于等于
    LTE = 4;
    // 在当前时间之前
    Before = 5;
    // 在当前时间之后
    After = 6;
  }

  message CertificateRuleItem {
    uint32 strategyId = 1;
    uint32 levelId = 2;
    Condition condition = 3;
    int64 value = 4; // day or timestamp
    repeated string receiverRoutes = 5;
  }

  houyi.common.TeamItem team = 1;
  repeated houyi.common.CertificateDatasourceItem datasource = 2;
  string name = 3;
  repeated string receiverRoutes = 4;
  map<string, string> labels = 5;
  map<string, string> annotations = 6;
  uint32 strategyId = 7;
  repeated CertificateRuleItem rules = 8;
}

message ServerPortStrategyItem {
  enum Condition {
    // 关闭
    CLOSE = 0;
    // 打开
    OPEN = 1;
  }
  houyi.common.TeamItem team = 1;
  repeated houyi.common.ServerPortDatasourceItem datasource = 2;
  string name = 3;
  repeated string receiverRoutes = 4;
  map<string, string> labels = 5;
  map<string, string> annotations = 6;
  uint32 strategyId = 7;
  Condition condition = 8;
}

message HttpStrategyItem {
  enum Condition {
    // 等于
    EQ = 0;
    // 大于
    GT = 1;
    // 大于等于
    GTE = 2;
    // 小于
    LT = 3;
    // 小于等于
    LTE = 4;
  }

  enum Judgment {
    OR = 0;
    AND = 1;
  }

  message HttpRuleItem {
    uint32 strategyId = 1;
    uint32 levelId = 2;
    Condition responseTimeCondition = 3;
    google.protobuf.Duration responseTime = 4;
    Condition statusCodeCondition = 5;
    int32 statusCode = 6;
    Judgment judgment = 7;
    repeated string receiverRoutes = 8;
  }

  houyi.common.TeamItem team = 1;
  repeated houyi.common.HttpDatasourceItem datasource = 2;
  string name = 3;
  repeated string receiverRoutes = 4;
  map<string, string> labels = 5;
  map<string, string> annotations = 6;
  uint32 strategyId = 7;
  repeated HttpRuleItem rules = 8;
}

message PingStrategyItem {
  enum Condition {
    // 等于
    EQ = 0;
    // 大于
    GT = 1;
    // 大于等于
    GTE = 2;
    // 小于
    LT = 3;
    // 小于等于
    LTE = 4;
  }

  message PingRuleItem {
    uint32 strategyId = 1;
    uint32 levelId = 2;
    Condition responseTimeCondition = 3;
    google.protobuf.Duration responseTime = 4;
    repeated string receiverRoutes = 5;
  }

  houyi.common.TeamItem team = 1;
  repeated houyi.common.PingDatasourceItem datasource = 2;
  string name = 3;
  repeated string receiverRoutes = 4;
  map<string, string> labels = 5;
  map<string, string> annotations = 6;
  uint32 strategyId = 7;
  repeated PingRuleItem rules = 8;
  bool lossPacket = 9;
}

message EventStrategyItem {
  enum DataType {
    string = 0;
    number = 1;
    boolean = 2;
  }

  enum StringCondition {
    // 等于
    StringEQ = 0;
    // 不等于
    StringNE = 1;
    // 包含
    StringContains = 2;
    // 不包含
    StringNotContains = 3;
    // 前缀
    StringPrefix = 4;
    // 后缀
    StringSuffix = 5;
    // 正则匹配
    StringRegex = 6;
  }

  enum NumberCondition {
    // 等于
    NumberEQ = 0;
    // 不等于
    NumberNE = 1;
    // 大于
    NumberGT = 2;
    // 大于等于
    NumberGTE = 3;
    // 小于
    NumberLT = 4;
    // 小于等于
    NumberLTE = 5;
  }

  enum BooleanCondition {
    // 等于
    BooleanEQ = 0;
    // 不等于
    BooleanNE = 1;
  }

  message LabelNotices {
    string index = 1;
    string value = 2;
    repeated string receiverRoutes = 3;
  }

  message EventRuleItem {
    uint32 strategyId = 1;
    uint32 levelId = 2;
    DataType dataType = 3;
    string index = 4;
    string value = 5;
    StringCondition stringCondition = 6;
    NumberCondition numberCondition = 7;
    BooleanCondition booleanCondition = 8;
    repeated string receiverRoutes = 9;
    repeated LabelNotices labelNotices = 10;
  }

  houyi.common.TeamItem team = 1;
  repeated houyi.common.EventDatasourceItem datasource = 2;
  string name = 3;
  string topic = 4;
  repeated string receiverRoutes = 5;
  map<string, string> labels = 6;
  map<string, string> annotations = 7;
  uint32 strategyId = 8;
  repeated EventRuleItem rules = 9;
}

message LogsStrategyItem {
  enum Condition {
    // 等于
    EQ = 0;
    // 不等于
    NE = 1;
    // 大于
    GT = 2;
    // 大于等于
    GTE = 3;
    // 小于
    LT = 4;
    // 小于等于
    LTE = 5;
  }

  message LogsRuleItem {
    uint32 strategyId = 1;
    uint32 levelId = 2;
    Condition condition = 3;
    int64 value = 4;
    string keyword = 5;
    SampleMode sampleMode = 6;
    repeated string receiverRoutes = 7;
  }

  houyi.common.TeamItem team = 1;
  repeated houyi.common.LogDatasourceItem datasource = 2;
  string name = 3;
  string expr = 4;
  repeated string receiverRoutes = 5;
  map<string, string> labels = 6;
  map<string, string> annotations = 7;
  uint32 strategyId = 8;
  repeated LogsRuleItem rules = 9;
  google.protobuf.Duration duration = 10;
}

message RemoveStrategyItem {
  StrategyType type = 1;
  uint32 strategyId = 2;
  uint32 teamId = 3;
}
