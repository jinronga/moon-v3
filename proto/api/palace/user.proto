syntax = "proto3";

package api.palace;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "palace/common/system.proto";
import "palace/common/system_enum.proto";
import "palace/common/common.proto";

option go_package = "github.com/moon-monitor/moon/pkg/api/palace;palace";
option java_multiple_files = true;
option java_package = "com.api.palace";

service User {
  rpc SelfInfo (api.palace.common.EmptyRequest) returns (SelfInfoReply) {
    option (google.api.http) = {
      get: "/api/user/self"
    };
  }

  rpc UpdateSelfInfo (UpdateSelfInfoRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      put: "/api/user/self"
      body: "*"
    };
  }

  rpc UpdateSelfPassword (UpdateSelfPasswordRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      put: "/api/user/self/password"
      body: "*"
    };
  }

  rpc LeaveTeam (LeaveTeamRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      post: "/api/user/self/leave-team"
      body: "*"
    };
  }

  rpc JoinTeam (JoinTeamRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      post: "/api/user/self/join-team"
      body: "*"
    };
  }

  rpc CreateTeam (CreateTeamRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      post: "/api/user/self/create-team"
      body: "*"
    };
  }
}

message SelfInfoReply {
  api.palace.common.UserItem user = 1;
}

message UpdateSelfInfoRequest {
  string nickname = 1 [(buf.validate.field).required = true];
  string avatar = 2 [(buf.validate.field).required = true];
  api.palace.common.Gender gender = 3 [(buf.validate.field).required = true];
}

message UpdateSelfPasswordRequest {
  string oldPassword = 1 [(buf.validate.field).required = true];
  string newPassword = 2 [(buf.validate.field).required = true];
}

message LeaveTeamRequest {
  uint32 teamID = 1 [(buf.validate.field).required = true];
  string reason = 2 [(buf.validate.field).cel = {
    message: "reason max length is 200"
    expression: "this.size() <= 200"
  }, (buf.validate.field).required = true];
}

message JoinTeamRequest {
  uint32 teamID = 1 [(buf.validate.field).required = true];
  string reason = 2 [(buf.validate.field).cel = {
    message: "reason max length is 200"
    expression: "this.size() <= 200"
  }, (buf.validate.field).required = true];
}

message CreateTeamRequest {
  string name = 1 [(buf.validate.field).cel = {
    message: "name is required"
    expression: "this.size() > 0"
  }, (buf.validate.field).cel = {
    message: "name max length is 32"
    expression: "this.size() <= 32"
  }];
  string remark = 2 [(buf.validate.field).cel = {
    message: "remark max length is 200"
    expression: "this.size() <= 200"
  }];
  string logo = 3 [(buf.validate.field).cel = {
    message: "logo max length is 255"
    expression: "this.size() <= 255"
  }];
}