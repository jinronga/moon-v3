syntax = "proto3";

package api.palace;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "palace/common/team.proto";
import "palace/common/team_enum.proto";
import "palace/common/system.proto";
import "palace/common/common.proto";

option go_package = "github.com/moon-monitor/moon/pkg/api/palace;palace";
option java_multiple_files = true;
option java_package = "com.api.palace";

service Team {
  rpc SaveTeam (SaveTeamRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      put: "/api/team/save"
      body: "*"
    };
  }

  rpc GetTeam (api.palace.common.EmptyRequest) returns (GetTeamReply) {
    option (google.api.http) = {
      get: "/api/team/detail"
    };
  }

  rpc GetTeamResources (api.palace.common.EmptyRequest) returns (GetTeamResourcesReply) {
    option (google.api.http) = {
      get: "/api/team/resources"
    };
  }

  rpc TransferTeam (TransferTeamRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      post: "/api/team/transfer"
      body: "*"
    };
  }

  rpc InviteMember (InviteMemberRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      post: "/api/team/invite/member"
      body: "*"
    };
  }

  rpc RemoveMember (RemoveMemberRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      post: "/api/team/remove/member"
      body: "*"
    };
  }

  rpc GetTeamMembers (api.palace.common.EmptyRequest) returns (GetTeamMembersReply) {
    option (google.api.http) = {
      post: "/api/team/members"
      body: "*"
    };
  }

  rpc UpdateMemberPosition (UpdateMemberPositionRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      post: "/api/team/update/member/position"
      body: "*"
    };
  }

  rpc UpdateMemberStatus (UpdateMemberStatusRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      post: "/api/team/update/member/status"
      body: "*"
    };
  }

  rpc UpdateMemberRoles (UpdateMemberRolesRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      post: "/api/team/update/member/roles"
      body: "*"
    };
  }

  rpc GetTeamRoles (api.palace.common.EmptyRequest) returns (GetTeamRolesReply) {
    option (google.api.http) = {
      post: "/api/team/roles"
      body: "*"
    };
  }

  rpc SaveTeamRole (SaveTeamRoleRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      put: "/api/team/roles"
      body: "*"
    };
  }

  rpc DeleteTeamRole (DeleteTeamRoleRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      delete: "/api/team/roles"
    };
  }

  rpc SaveEmailConfig (SaveEmailConfigRequest) returns (api.palace.common.EmptyReply) {
    option (google.api.http) = {
      put: "/api/team/email/config"
      body: "*"
    };
  }
}

message SaveTeamRequest {
  string name = 1 [(buf.validate.field).cel = {
    message: "name is required"
    expression: "this.size() > 0"
  }, (buf.validate.field).cel = {
    message: "name max length is 32"
    expression: "this.size() <= 32"
  }];
  string remark = 2 [(buf.validate.field).cel = {
    message: "remark max length is 200"
    expression: "this.size() <= 200"
  }];
  string logo = 3 [(buf.validate.field).cel = {
    message: "logo max length is 255"
    expression: "this.size() <= 255"
  }];
}

message GetTeamReply {
  api.palace.common.TeamItem detail = 1;
}

message GetTeamResourcesReply {
  repeated api.palace.common.ResourceItem items = 1;
}

message TransferTeamRequest {
  uint32 newLeaderID = 1 [(buf.validate.field).required = true];
}

message InviteMemberRequest {
  string userEmail = 1 [(buf.validate.field).required = true];
  api.palace.common.MemberPosition position = 2 [(buf.validate.field).required = true];
  repeated uint32 roleIds = 3;
}

message RemoveMemberRequest {
  string userEmail = 1 [(buf.validate.field).required = true];
}

message GetTeamMembersReply {
  repeated api.palace.common.TeamMemberItem items = 1;
}

message GetTeamRolesReply {
  repeated api.palace.common.TeamRoleItem items = 1;
}

message SaveTeamRoleRequest {
  uint32 roleID = 1 [(buf.validate.field).required = true];
  string name = 2 [(buf.validate.field).cel = {
    message: "name max length is 32"
    expression: "this.size() <= 32"
  }, (buf.validate.field).required = true];
  string remark = 4 [(buf.validate.field).cel = {
    message: "remark max length is 200"
    expression: "this.size() <= 200"
  }];
  repeated uint32 resourceIDs = 6;
}

message UpdateMemberPositionRequest {
  uint32 memberID = 1 [(buf.validate.field).required = true];
  api.palace.common.MemberPosition position = 2 [(buf.validate.field).required = true];
}

message UpdateMemberStatusRequest {
  repeated uint32 memberIDs = 1 [(buf.validate.field).cel = {
    message: "memberIDs is required"
    expression: "this.size() > 0"
  }, (buf.validate.field).cel = {
    message: "memberIDs max size is 100"
    expression: "this.size() <= 100"
  }];
  api.palace.common.MemberStatus status = 2 [(buf.validate.field).required = true];
}

message UpdateMemberRolesRequest {
  repeated uint32 memberIDs = 1 [(buf.validate.field).cel = {
    message: "memberIDs is required"
    expression: "this.size() > 0"
  }, (buf.validate.field).cel = {
    message: "memberIDs max size is 100"
    expression: "this.size() <= 100"
  }];
  repeated uint32 roleIDs = 2 [(buf.validate.field).cel = {
    message: "roleIDs is required"
    expression: "this.size() > 0"
  }];
}

message DeleteTeamRoleRequest {
  uint32 roleID = 1 [(buf.validate.field).required = true];
}

message SaveEmailConfigRequest {
  string user = 1 [(buf.validate.field).required = true];
  string pass = 2 [(buf.validate.field).required = true];
  string host = 3 [(buf.validate.field).required = true];
  uint32 port = 4 [(buf.validate.field).required = true];
  bool enable = 5;
}
