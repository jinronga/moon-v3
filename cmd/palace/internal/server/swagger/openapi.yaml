# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/auth/captcha:
        get:
            tags:
                - Auth
            operationId: Auth_GetCaptcha
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetCaptchaReply'
    /api/auth/login/email:
        post:
            tags:
                - Auth
            operationId: Auth_LoginByEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.LoginByEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.LoginReply'
    /api/auth/logout:
        post:
            tags:
                - Auth
            operationId: Auth_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.LogoutReply'
    /api/auth/oauth2/list:
        post:
            tags:
                - Auth
            operationId: Auth_OAuth2List
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.common.EmptyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.OAuth2ListReply'
    /api/auth/oauth2/login/email:
        post:
            tags:
                - Auth
            operationId: Auth_OAuthLoginByEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.OAuthLoginByEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.LoginReply'
    /api/auth/refresh:
        post:
            tags:
                - Auth
            operationId: Auth_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.common.EmptyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.LoginReply'
    /api/auth/verify/email:
        post:
            tags:
                - Auth
            operationId: Auth_VerifyEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.VerifyEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.VerifyEmailReply'
    /api/resource/batch/status:
        put:
            tags:
                - Resource
            operationId: Resource_BatchUpdateResourceStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.BatchUpdateResourceStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/resource/list:
        post:
            tags:
                - Resource
            operationId: Resource_ListResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListResourceReply'
    /api/resource/save:
        put:
            tags:
                - Resource
            operationId: Resource_SaveResource
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveResourceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/resource/{id}:
        get:
            tags:
                - Resource
            operationId: Resource_GetResource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetResourceReply'
        delete:
            tags:
                - Resource
            operationId: Resource_DeleteResource
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/role:
        get:
            tags:
                - System
            operationId: System_GetSystemRole
            parameters:
                - name: roleID
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetSystemRoleReply'
        post:
            tags:
                - System
            operationId: System_SaveRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/role/status:
        put:
            tags:
                - System
            operationId: System_UpdateRoleStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateRoleStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/role/users:
        put:
            tags:
                - System
            operationId: System_UpdateRoleUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateRoleUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/team/list:
        post:
            tags:
                - System
            operationId: System_GetTeamList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.GetTeamListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamListReply'
    /api/system/user:
        put:
            tags:
                - System
            operationId: System_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/user/list:
        post:
            tags:
                - System
            operationId: System_GetUserList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.GetUserListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetUserListReply'
    /api/system/user/password:
        put:
            tags:
                - System
            operationId: System_ResetUserPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ResetUserPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/user/position:
        put:
            tags:
                - System
            operationId: System_UpdateUserPosition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateUserPositionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/user/roles:
        put:
            tags:
                - System
            operationId: System_UpdateUserRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateUserRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/user/status:
        put:
            tags:
                - System
            operationId: System_UpdateUserStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateUserStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/system/user/{userID}:
        get:
            tags:
                - System
            operationId: System_GetUser
            parameters:
                - name: userID
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetUserReply'
    /api/team/detail:
        get:
            tags:
                - Team
            operationId: Team_GetTeam
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamReply'
    /api/team/email/config:
        put:
            tags:
                - Team
            operationId: Team_SaveEmailConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveEmailConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/invite/member:
        post:
            tags:
                - Team
            operationId: Team_InviteMember
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.InviteMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/members:
        post:
            tags:
                - Team
            operationId: Team_GetTeamMembers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.common.EmptyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamMembersReply'
    /api/team/remove/member:
        post:
            tags:
                - Team
            operationId: Team_RemoveMember
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.RemoveMemberRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/resources:
        get:
            tags:
                - Team
            operationId: Team_GetTeamResources
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamResourcesReply'
    /api/team/roles:
        put:
            tags:
                - Team
            operationId: Team_SaveTeamRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
        post:
            tags:
                - Team
            operationId: Team_GetTeamRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.common.EmptyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamRolesReply'
        delete:
            tags:
                - Team
            operationId: Team_DeleteTeamRole
            parameters:
                - name: roleID
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/save:
        put:
            tags:
                - Team
            operationId: Team_SaveTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy:
        get:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_GetTeamStrategy
            parameters:
                - name: strategyID
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamStrategyReply'
        delete:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_DeleteTeamStrategy
            parameters:
                - name: strategyID
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/group:
        get:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_GetTeamStrategyGroup
            parameters:
                - name: groupID
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.GetTeamStrategyGroupReply'
        post:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_SaveTeamStrategyGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SaveTeamStrategyGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
        delete:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_DeleteTeamStrategyGroup
            parameters:
                - name: groupID
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/group/list:
        post:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_ListTeamStrategyGroup
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListTeamStrategyGroupRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListTeamStrategyGroupReply'
    /api/team/strategy/group/status:
        put:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_UpdateTeamStrategyGroupStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamStrategyGroupStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/list:
        post:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_ListTeamStrategy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.ListTeamStrategyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.ListTeamStrategyReply'
    /api/team/strategy/status:
        put:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_UpdateTeamStrategiesStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateTeamStrategiesStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/subscribe:
        post:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_SubscribeTeamStrategy
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SubscribeTeamStrategyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/subscribe/list:
        post:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_SubscribeTeamStrategies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SubscribeTeamStrategiesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/strategy/subscribe/self:
        post:
            tags:
                - TeamStrategy
            operationId: TeamStrategy_SelfSubscribeTeamStrategies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.SelfSubscribeTeamStrategiesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.SelfSubscribeTeamStrategiesReply'
    /api/team/transfer:
        post:
            tags:
                - Team
            operationId: Team_TransferTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.TransferTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/update/member/position:
        post:
            tags:
                - Team
            operationId: Team_UpdateMemberPosition
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateMemberPositionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/update/member/roles:
        post:
            tags:
                - Team
            operationId: Team_UpdateMemberRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateMemberRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/team/update/member/status:
        post:
            tags:
                - Team
            operationId: Team_UpdateMemberStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateMemberStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/user/self:
        get:
            tags:
                - User
            operationId: User_SelfInfo
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.SelfInfoReply'
        put:
            tags:
                - User
            operationId: User_UpdateSelfInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateSelfInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/user/self/create-team:
        post:
            tags:
                - User
            operationId: User_CreateTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.CreateTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/user/self/join-team:
        post:
            tags:
                - User
            operationId: User_JoinTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.JoinTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/user/self/leave-team:
        post:
            tags:
                - User
            operationId: User_LeaveTeam
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.LeaveTeamRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /api/user/self/password:
        put:
            tags:
                - User
            operationId: User_UpdateSelfPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.palace.UpdateSelfPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.palace.common.EmptyReply'
    /health:
        get:
            tags:
                - Health
            operationId: Health_Check
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.common.CheckReply'
    /v1/server/register:
        post:
            tags:
                - Server
            operationId: Server_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.common.ServerRegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.common.ServerRegisterReply'
components:
    schemas:
        api.common.CheckReply:
            type: object
            properties:
                healthy:
                    type: boolean
                version:
                    type: string
        api.common.ServerRegisterReply:
            type: object
            properties: {}
        api.common.ServerRegisterRequest:
            type: object
            properties:
                server:
                    $ref: '#/components/schemas/config.MicroServer'
                discovery:
                    $ref: '#/components/schemas/config.Discovery'
                teamIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
                isOnline:
                    type: boolean
                uuid:
                    type: string
        api.palace.BatchUpdateResourceStatusRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: integer
                        format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.CaptchaValidateRequest:
            type: object
            properties:
                captchaId:
                    type: string
                answer:
                    type: string
        api.palace.CreateTeamRequest:
            type: object
            properties:
                name:
                    type: string
                remark:
                    type: string
                logo:
                    type: string
        api.palace.GetCaptchaReply:
            type: object
            properties:
                captchaId:
                    type: string
                captchaImg:
                    type: string
                expiredSeconds:
                    type: string
        api.palace.GetResourceReply:
            type: object
            properties:
                detail:
                    $ref: '#/components/schemas/api.palace.common.ResourceItem'
        api.palace.GetSystemRoleReply:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/api.palace.common.SystemRoleItem'
        api.palace.GetTeamListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamItem'
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
        api.palace.GetTeamListRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                status:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.SelectItem'
                keyword:
                    type: string
        api.palace.GetTeamMembersReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamMemberItem'
        api.palace.GetTeamReply:
            type: object
            properties:
                detail:
                    $ref: '#/components/schemas/api.palace.common.TeamItem'
        api.palace.GetTeamResourcesReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.ResourceItem'
        api.palace.GetTeamRolesReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamRoleItem'
        api.palace.GetTeamStrategyGroupReply:
            type: object
            properties:
                detail:
                    $ref: '#/components/schemas/api.palace.common.TeamStrategyGroupItem'
        api.palace.GetTeamStrategyReply:
            type: object
            properties:
                detail:
                    $ref: '#/components/schemas/api.palace.common.TeamStrategyItem'
        api.palace.GetUserListReply:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.UserItem'
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
        api.palace.GetUserListRequest:
            type: object
            properties:
                status:
                    type: array
                    items:
                        type: integer
                        format: enum
                position:
                    type: array
                    items:
                        type: integer
                        format: enum
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
        api.palace.GetUserReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.palace.common.UserItem'
        api.palace.InviteMemberRequest:
            type: object
            properties:
                userEmail:
                    type: string
                position:
                    type: integer
                    format: enum
                roleIds:
                    type: array
                    items:
                        type: integer
                        format: uint32
        api.palace.JoinTeamRequest:
            type: object
            properties:
                teamID:
                    type: integer
                    format: uint32
                reason:
                    type: string
        api.palace.LeaveTeamRequest:
            type: object
            properties:
                teamID:
                    type: integer
                    format: uint32
                reason:
                    type: string
        api.palace.ListResourceReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.ResourceItem'
        api.palace.ListResourceRequest:
            type: object
            properties:
                status:
                    type: array
                    items:
                        type: integer
                        format: enum
                module:
                    type: array
                    items:
                        type: integer
                        format: enum
                domain:
                    type: array
                    items:
                        type: integer
                        format: enum
                keyword:
                    type: string
        api.palace.ListTeamStrategyGroupReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamStrategyGroupItem'
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
        api.palace.ListTeamStrategyGroupRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                keyword:
                    type: string
                status:
                    type: array
                    items:
                        type: integer
                        format: enum
        api.palace.ListTeamStrategyReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamStrategyItem'
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
        api.palace.ListTeamStrategyRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                groupID:
                    type: integer
                    format: uint32
                status:
                    type: array
                    items:
                        type: integer
                        format: enum
        api.palace.LoginByEmailRequest:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                code:
                    type: string
                nickname:
                    type: string
                remark:
                    type: string
                gender:
                    type: integer
                    format: enum
        api.palace.LoginByPasswordRequest:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
                captcha:
                    $ref: '#/components/schemas/api.palace.CaptchaValidateRequest'
        api.palace.LoginReply:
            type: object
            properties:
                token:
                    type: string
                expiredSeconds:
                    type: string
                user:
                    $ref: '#/components/schemas/api.palace.common.UserBaseItem'
        api.palace.LogoutReply:
            type: object
            properties:
                redirect:
                    type: string
        api.palace.LogoutRequest:
            type: object
            properties:
                redirect:
                    type: string
        api.palace.OAuth2ListReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.OAuth2ListReply_OAuthItem'
        api.palace.OAuth2ListReply_OAuthItem:
            type: object
            properties:
                icon:
                    type: string
                    description: 图标
                label:
                    type: string
                    description: 标签
                redirect:
                    type: string
                    description: 重定向地址
        api.palace.OAuthLoginByEmailRequest:
            type: object
            properties:
                oauthID:
                    type: integer
                    format: uint32
                email:
                    type: string
                code:
                    type: string
                token:
                    type: string
                app:
                    type: integer
                    format: int32
        api.palace.RemoveMemberRequest:
            type: object
            properties:
                userEmail:
                    type: string
        api.palace.ResetUserPasswordRequest:
            type: object
            properties:
                userIDs:
                    type: array
                    items:
                        type: integer
                        format: uint32
        api.palace.SaveEmailConfigRequest:
            type: object
            properties:
                user:
                    type: string
                pass:
                    type: string
                host:
                    type: string
                port:
                    type: integer
                    format: uint32
                enable:
                    type: boolean
        api.palace.SaveResourceRequest:
            type: object
            properties:
                name:
                    type: string
                    description: api name
                path:
                    type: string
                    description: api path
                remark:
                    type: string
                    description: api remark
                module:
                    type: integer
                    description: api module
                    format: enum
                domain:
                    type: integer
                    description: api domain
                    format: enum
                id:
                    type: integer
                    description: api id
                    format: uint32
        api.palace.SaveRoleRequest:
            type: object
            properties:
                roleID:
                    type: integer
                    format: uint32
                name:
                    type: string
                remark:
                    type: string
                resourceIDs:
                    type: array
                    items:
                        type: integer
                        format: uint32
        api.palace.SaveTeamRequest:
            type: object
            properties:
                name:
                    type: string
                remark:
                    type: string
                logo:
                    type: string
        api.palace.SaveTeamRoleRequest:
            type: object
            properties:
                roleID:
                    type: integer
                    format: uint32
                name:
                    type: string
                remark:
                    type: string
                resourceIDs:
                    type: array
                    items:
                        type: integer
                        format: uint32
        api.palace.SaveTeamStrategyGroupRequest:
            type: object
            properties:
                groupID:
                    type: integer
                    format: uint32
                name:
                    type: string
                remark:
                    type: string
        api.palace.SaveTeamStrategyRequest:
            type: object
            properties:
                strategyID:
                    type: integer
                    format: uint32
                groupID:
                    type: integer
                    format: uint32
                name:
                    type: string
                remark:
                    type: string
        api.palace.SelfInfoReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.palace.common.UserItem'
        api.palace.SelfSubscribeTeamStrategiesReply:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamStrategyItem'
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationReply'
        api.palace.SelfSubscribeTeamStrategiesRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
        api.palace.SubscribeTeamStrategiesRequest:
            type: object
            properties:
                pagination:
                    $ref: '#/components/schemas/api.palace.common.PaginationRequest'
                strategyID:
                    type: integer
                    format: uint32
        api.palace.SubscribeTeamStrategyRequest:
            type: object
            properties:
                strategyID:
                    type: integer
                    format: uint32
                isSubscribe:
                    type: boolean
        api.palace.TransferTeamRequest:
            type: object
            properties:
                newLeaderID:
                    type: integer
                    format: uint32
        api.palace.UpdateMemberPositionRequest:
            type: object
            properties:
                memberID:
                    type: integer
                    format: uint32
                position:
                    type: integer
                    format: enum
        api.palace.UpdateMemberRolesRequest:
            type: object
            properties:
                memberIDs:
                    type: array
                    items:
                        type: integer
                        format: uint32
                roleIDs:
                    type: array
                    items:
                        type: integer
                        format: uint32
        api.palace.UpdateMemberStatusRequest:
            type: object
            properties:
                memberIDs:
                    type: array
                    items:
                        type: integer
                        format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.UpdateRoleStatusRequest:
            type: object
            properties:
                roleID:
                    type: integer
                    format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.UpdateRoleUsersRequest:
            type: object
            properties:
                roleID:
                    type: integer
                    format: uint32
                userIDs:
                    type: array
                    items:
                        type: integer
                        format: uint32
        api.palace.UpdateSelfInfoRequest:
            type: object
            properties:
                nickname:
                    type: string
                avatar:
                    type: string
                gender:
                    type: integer
                    format: enum
        api.palace.UpdateSelfPasswordRequest:
            type: object
            properties:
                oldPassword:
                    type: string
                newPassword:
                    type: string
        api.palace.UpdateTeamStrategiesStatusRequest:
            type: object
            properties:
                strategyIDs:
                    type: array
                    items:
                        type: integer
                        format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.UpdateTeamStrategyGroupStatusRequest:
            type: object
            properties:
                groupID:
                    type: integer
                    format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.UpdateUserPositionRequest:
            type: object
            properties:
                userID:
                    type: integer
                    format: uint32
                position:
                    type: integer
                    format: enum
        api.palace.UpdateUserRequest:
            type: object
            properties:
                userID:
                    type: integer
                    format: uint32
                nickname:
                    type: string
                avatar:
                    type: string
                gender:
                    type: integer
                    format: enum
        api.palace.UpdateUserRolesRequest:
            type: object
            properties:
                userID:
                    type: integer
                    format: uint32
                roleIDs:
                    type: array
                    items:
                        type: integer
                        format: uint32
        api.palace.UpdateUserStatusRequest:
            type: object
            properties:
                userIDs:
                    type: array
                    items:
                        type: integer
                        format: uint32
                status:
                    type: integer
                    format: enum
        api.palace.VerifyEmailReply:
            type: object
            properties:
                expiredSeconds:
                    type: string
        api.palace.VerifyEmailRequest:
            type: object
            properties:
                email:
                    type: string
                captcha:
                    $ref: '#/components/schemas/api.palace.CaptchaValidateRequest'
        api.palace.common.EmptyReply:
            type: object
            properties:
                message:
                    type: string
        api.palace.common.EmptyRequest:
            type: object
            properties: {}
        api.palace.common.PaginationReply:
            type: object
            properties:
                total:
                    type: integer
                    format: uint32
                page:
                    type: integer
                    format: uint32
                limit:
                    type: integer
                    format: uint32
        api.palace.common.PaginationRequest:
            type: object
            properties:
                page:
                    type: integer
                    format: uint32
                limit:
                    type: integer
                    format: uint32
        api.palace.common.ResourceItem:
            type: object
            properties:
                id:
                    type: integer
                    description: api id
                    format: uint32
                name:
                    type: string
                    description: api name
                path:
                    type: string
                    description: api path
                status:
                    type: integer
                    description: api status
                    format: enum
                remark:
                    type: string
                    description: api remark
                createdAt:
                    type: string
                    description: api created at
                updatedAt:
                    type: string
                    description: api updated at
                module:
                    type: integer
                    description: api module
                    format: enum
                domain:
                    type: integer
                    description: api domain
                    format: enum
            description: system-api
        api.palace.common.SelectItem:
            type: object
            properties:
                value:
                    type: integer
                    format: uint32
                label:
                    type: string
                disabled:
                    type: boolean
        api.palace.common.SystemRoleItem:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: enum
        api.palace.common.TeamItem:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                uuid:
                    type: string
                name:
                    type: string
                remark:
                    type: string
                logo:
                    type: string
                status:
                    type: integer
                    format: enum
                creator:
                    $ref: '#/components/schemas/api.palace.common.UserItem'
                leader:
                    $ref: '#/components/schemas/api.palace.common.UserItem'
                admins:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.UserItem'
                createdAt:
                    type: string
                updatedAt:
                    type: string
        api.palace.common.TeamMemberItem:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                user:
                    $ref: '#/components/schemas/api.palace.common.UserItem'
                position:
                    type: integer
                    format: enum
                status:
                    type: integer
                    format: enum
                inviter:
                    $ref: '#/components/schemas/api.palace.common.UserItem'
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamRoleItem'
                createdAt:
                    type: string
                updatedAt:
                    type: string
        api.palace.common.TeamRoleItem:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: enum
                resources:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.ResourceItem'
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.palace.common.TeamMemberItem'
                createdAt:
                    type: string
                updatedAt:
                    type: string
        api.palace.common.TeamStrategyGroupItem:
            type: object
            properties:
                groupID:
                    type: integer
                    format: uint32
                name:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: enum
                strategyCount:
                    type: string
                enableStrategyCount:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                creator:
                    $ref: '#/components/schemas/api.palace.common.UserItem'
        api.palace.common.TeamStrategyItem:
            type: object
            properties:
                strategyID:
                    type: integer
                    format: uint32
                groupID:
                    type: integer
                    format: uint32
                name:
                    type: string
                remark:
                    type: string
                status:
                    type: integer
                    format: enum
                creator:
                    $ref: '#/components/schemas/api.palace.common.UserItem'
                createdAt:
                    type: string
                updatedAt:
                    type: string
        api.palace.common.UserBaseItem:
            type: object
            properties:
                username:
                    type: string
                nickname:
                    type: string
                avatar:
                    type: string
                gender:
                    type: integer
                    format: enum
                userId:
                    type: integer
                    format: uint32
        api.palace.common.UserItem:
            type: object
            properties:
                username:
                    type: string
                nickname:
                    type: string
                avatar:
                    type: string
                gender:
                    type: integer
                    format: enum
        config.Discovery:
            type: object
            properties:
                driver:
                    type: integer
                    format: enum
                enable:
                    type: boolean
                etcd:
                    $ref: '#/components/schemas/config.Etcd'
            description: server discovery config
        config.Etcd:
            type: object
            properties:
                endpoints:
                    type: array
                    items:
                        type: string
                username:
                    type: string
                password:
                    type: string
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                autoSyncInterval:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                dialKeepAliveTime:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                dialKeepAliveTimeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                maxCallSendMsgSize:
                    type: string
                maxCallRecvMsgSize:
                    type: string
                rejectOldCluster:
                    type: boolean
                permitWithoutStream:
                    type: boolean
                maxUnaryRetries:
                    type: string
                backoffWaitBetween:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                backoffJitterFraction:
                    type: number
                    format: double
            description: etcd data source config
        config.MicroServer:
            type: object
            properties:
                endpoint:
                    type: string
                    description: endpoint
                secret:
                    type: string
                    description: secret
                timeout:
                    pattern: ^-?(?:0|[1-9][0-9]{0,11})(?:\.[0-9]{1,9})?s$
                    type: string
                    description: timeout
                network:
                    type: integer
                    description: network type, http, https, grpc
                    format: enum
                version:
                    type: string
                    description: node version
                name:
                    type: string
                    description: name service name
            description: micro server config
tags:
    - name: Auth
    - name: Health
      description: Health Check API
    - name: Resource
    - name: Server
    - name: System
    - name: Team
    - name: TeamStrategy
    - name: User
